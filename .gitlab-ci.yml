stages:
  - clone
  - build
  - deploy
  - cleanup

variables:
  IMAGE_TAG: "latest"
  DOCKER_IMAGE: amodarivindu/myapp
  FULL_IMAGE: $DOCKER_IMAGE:$IMAGE_TAG
  APP_REPO_URL: "https://github.com/amodarivindu/GTN_project.git"
  TERRAFORM_REPO_URL: "https://github.com/amodarivindu/GTN_Iac.git"

clone_repos:
  stage: clone
  image: alpine:latest
  script:
    - apk add --no-cache git
    - git clone --depth 1 --branch main ${APP_REPO_URL} app
    - git clone --depth 1 --branch main ${TERRAFORM_REPO_URL} terraform
  artifacts:
    paths:
      - app/
      - terraform/
    expire_in: 1 hour


build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - cd app
    - docker build -t $FULL_IMAGE .
    - docker push $FULL_IMAGE
  only:
    - main
 
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl unzip  # Install dependencies
    - curl -o terraform.zip "https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip"
    - unzip -o terraform.zip -d /usr/local/bin/  # Force overwrite & extract directly to PATH
    - chmod +x /usr/local/bin/terraform  # Ensure executable permissions
    - terraform --version  # Verify installation
  script:
    - cd terraform
    - terraform init
    - terraform validate
    - terraform plan 
    - terraform apply -auto-approve 
  only:
    - main
 
